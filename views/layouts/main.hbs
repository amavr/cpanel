<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="shortcut icon" href="/img/favicon.png" type="image/png">
    <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <link rel="stylesheet" href="css/loader-default.css">
    <link rel="stylesheet" href="css/sidebar.css">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

    <link rel="stylesheet" href="css/ie-colors.css">
    <link rel="stylesheet" href="css/ie-styles.css">
    <link rel="stylesheet" href="css/ie-color-scheme.css">

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
    <title>Панель обработки входящих сообщений</title>

    <title>{{ title }}</title>
</head>

<body>
    <div id="loader" class="loader loader-default"></div>
    {{> sidebar}}
    <div class="body">
        {{{body}}}
    </div>
    {{> footer}}

    <script>
        Vue.config.devtools = true;


        function showLoading() {
            document.getElementById('loader').classList.add('is-active');
        }
        function hideLoading() {
            document.getElementById('loader').classList.remove('is-active');
        }


        window.addEventListener('load', function () {
            console.log('READY MAIN TEMPLATE');

            function initAxios() {
                // declare a request interceptor
                axios.interceptors.request.use(config => {
                    showLoading();
                    return config;
                }, error => {
                    hideLoading();
                    // handle the error
                    return Promise.reject(error);
                });

                // declare a response interceptor
                axios.interceptors.response.use((response) => {
                    hideLoading();
                    return response;
                }, error => {
                    hideLoading();
                    // handle the response error
                    return Promise.reject(error);
                });
            }

            main();
        });
    </script>

</body>

</html>